<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.softwaretrajectory.msr.stack.persistence">

  <select id="selectPostSeriesForPreseries" parameterType="Integer"
    resultType="com.softwaretrajectory.msr.stack.persistence.PostSeries">
    SELECT * from postseries where ownerUserId=#{value}
  </select>

  <select id="selectCommentSeriesForPreseries" parameterType="Integer"
    resultType="com.softwaretrajectory.msr.stack.persistence.CommentSeries">
    SELECT * from commentseries where userId=#{value}
  </select>


  <select id="GetPreseriesUsers" resultType="com.softwaretrajectory.msr.stack.persistence.User">
    SELECT * from users
    where id in (select
    distinct(userId) from preseries)
  </select>

  <select id="GetFullUserSeriesId" parameterType="Integer" resultType="Integer">
    SELECT * from preseries
    where userId=#{value} and tag="full"
  </select>


  <insert id="SaveSaxEntry" parameterType="com.softwaretrajectory.msr.stack.persistence.SaxEntry">
    INSERT INTO preseries_sax
    (`seriesId`,
    `date`,
    `sax_string`)
    VALUES
    (#{seriesId}, #{date,
    javaType=org.joda.time.LocalDateTime,
    jdbcType=DATE,
    typeHandler=com.softwaretrajectory.msr.stack.persistence.LocalDateTimeDateTypeHandler},
    #{sax_string})
  </insert>

  <select id="GetFirstUserEvent" parameterType="Integer"
    resultType="com.softwaretrajectory.msr.stack.persistence.PreseriesEvent">
    SELECT pe.* from preseries_event pe join
    preseries ps on
    pe.seriesId=ps.id where
    ps.userId=#{value}
    order by pe.date asc limit 1
  </select>

  <select id="GetLastUserEvent" parameterType="Integer"
    resultType="com.softwaretrajectory.msr.stack.persistence.PreseriesEvent">
    SELECT pe.* from preseries_event pe join
    preseries ps on
    pe.seriesId=ps.id where
    ps.userId=#{value}
    order by pe.date desc limit 1
  </select>

  <select id="GetFullUserDaySeries" parameterType="HashMap" resultType="HashMap">
    SELECT pe.hour as
    hour,
    sum(pe.counter) as counter from preseries_event pe join
    preseries
    ps on
    pe.seriesId=ps.id
    where
    ps.userId=#{userId}
    and pe.date between #{start,
    javaType=org.joda.time.LocalDateTime,
    jdbcType=DATE,
    typeHandler=com.softwaretrajectory.msr.stack.persistence.LocalDateTimeDateTypeHandler} AND
    #{end,
    javaType=org.joda.time.LocalDateTime,
    jdbcType=DATE,
    typeHandler=com.softwaretrajectory.msr.stack.persistence.LocalDateTimeDateTypeHandler}
    group by pe.hour order
    by hour;
  </select>


  <select id="GetFullUserEventSeries" parameterType="HashMap" resultType="HashMap">
    SELECT
    DAYOFWEEK(pe.date) as weekday, sum(pe.counter) as `count` from preseries_event pe join
    preseries
    ps on
    pe.seriesId=ps.id where
    ps.userId=#{userId}
    and pe.date between #{start,
    javaType=org.joda.time.LocalDateTime,
    jdbcType=DATE,
    typeHandler=com.softwaretrajectory.msr.stack.persistence.LocalDateTimeDateTypeHandler} AND
    #{end,
    javaType=org.joda.time.LocalDateTime,
    jdbcType=DATE,
    typeHandler=com.softwaretrajectory.msr.stack.persistence.LocalDateTimeDateTypeHandler}
    group by
    pe.date order by pe.date;
  </select>

  <select id="getPreseriesRecord" parameterType="com.softwaretrajectory.msr.stack.persistence.Preseries"
    resultType="com.softwaretrajectory.msr.stack.persistence.Preseries">
    SELECT * from preseries where userid=#{userid} and
    tag=#{tag}
  </select>

  <insert id="savePreseries" parameterType="com.softwaretrajectory.msr.stack.persistence.Preseries"
    useGeneratedKeys="true" keyProperty="id">
    INSERT IGNORE INTO preseries
    (`userid`, `tag`) VALUES
    (#{userid},
    #{tag});
  </insert>

  <select id="getPreSeriesEvent" parameterType="com.softwaretrajectory.msr.stack.persistence.PreseriesEvent"
    resultType="com.softwaretrajectory.msr.stack.persistence.PreseriesEvent">
    select * from preseries_event where `seriesId`=#{seriesId}
    and
    `tag`=#{tag} and
    `date`=#{date} and hour=#{hour}
  </select>

  <insert id="savePreseriesEvent" parameterType="com.softwaretrajectory.msr.stack.persistence.PreseriesEvent">
    INSERT INTO preseries_event
    (`seriesId`,
    `tag`, `date`,
    `hour`, `counter`)
    VALUES
    (#{seriesId}, #{tag}, #{date,
    javaType=org.joda.time.LocalDateTime,
    jdbcType=DATE,
    typeHandler=com.softwaretrajectory.msr.stack.persistence.LocalDateTimeDateTypeHandler},
    #{hour},
    #{counter})
  </insert>

  <insert id="updatePreseriesEvent" parameterType="com.softwaretrajectory.msr.stack.persistence.PreseriesEvent">
    UPDATE preseries_event set
    `counter`=#{counter} where
    `seriesId`=#{seriesId} and
    `tag`=#{tag} and
    `date`=#{date} and
    `hour`=#{hour}
  </insert>

</mapper>