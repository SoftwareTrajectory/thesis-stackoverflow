<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.softwaretrajectory.msr.stack.persistence">

  <select id="getUsersForLocationUpdate" resultType="com.softwaretrajectory.msr.stack.persistence.User">
    select * from
    users where location is not
    null and locationId is null
  </select>

  <select id="getUsers" resultType="com.softwaretrajectory.msr.stack.persistence.User">
    SELECT * FROM users
  </select>

  <select id="getUser" resultType="com.softwaretrajectory.msr.stack.persistence.User">
    SELECT * FROM users where id=#{value}
  </select>

  <select id="getUsersWithReputation" parameterType="HashMap"
    resultType="com.softwaretrajectory.msr.stack.persistence.User">
    SELECT * FROM users where
    reputation between #{low} and
    #{high}
  </select>

  <update id="updateUserLocation" parameterType="HashMap">
    update users set
    locationId = #{locationId}
    where id=#{userId};
  </update>

  <insert id="saveUser" parameterType="com.softwaretrajectory.msr.stack.persistence.User"
    useGeneratedKeys="true" keyProperty="id">
    INSERT INTO
    users
    (`id`,
    `displayName`, `emailHash`, `age`,
    `location`, `locationId`,
    `websiteUrl`, `aboutMe`, `creationDate`,
    `lastAccessDate`,
    `reputation`, `views`,
    `upVotes`, `downVotes`)
    VALUES
    (#{id},
    #{displayName}, #{emailHash}, #{age},
    #{location}, #{locationId},
    #{websiteUrl}, #{aboutMe}, #{creationDate,
    javaType=javax.xml.datatype.XMLGregorianCalendar,
    jdbcType=TIMESTAMP,
    typeHandler=com.softwaretrajectory.msr.stack.persistence.XMLGregorianCalendarTypeHandler},
    #{lastAccessDate,
    javaType=javax.xml.datatype.XMLGregorianCalendar,
    jdbcType=TIMESTAMP,
    typeHandler=com.softwaretrajectory.msr.stack.persistence.XMLGregorianCalendarTypeHandler},
    #{reputation}, #{views},
    #{upVotes}, #{downVotes})
    ON DUPLICATE KEY
    UPDATE set
    locationId=#{locationId}
  </insert>

</mapper>